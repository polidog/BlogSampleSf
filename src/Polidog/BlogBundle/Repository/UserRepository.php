<?php

namespace Polidog\BlogBundle\Repository;
use Doctrine\ORM\EntityManager;
use Polidog\BlogBundle\DomainEntityConverter\UserConverter;
use Polidog\BlogBundle\Entity\User;

use JMS\DiExtraBundle\Annotation as DI;

/**
 * @DI\Service(autowire=true)
 *
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository implements \Polidog\Blog\Model\Account\UserRepository
{
    /**
     * @var EntityManager
     */
    private $entityManager;

    /**
     * @var UserConverter
     */
    private $userConverter;

    /**
     * @param EntityManager $entityManager
     * @param UserConverter $userConverter
     */
    public function __construct(EntityManager $entityManager, UserConverter $userConverter)
    {
        $this->entityManager = $entityManager;
        $this->userConverter = $userConverter;
    }


    public function findEmail(string $email)
    {
        /** @var User $user */
        $user = $this->findOneBy(['email' => $email]);
        if ($user instanceof User) {
            return $this->userConverter->toDomain($user);
        }
    }


    public function create(\Polidog\Blog\Model\Account\User $user):void
    {
        $entity = $this->userConverter->toDoctrine($user);
        $this->entityManager->persist($entity);
        $this->entityManager->flush();
    }



    private function findOneBy(array $criteria, array $orderBy = null)
    {
        $persister = $this->entityManager->getUnitOfWork()->getEntityPersister(User::class);
        return $persister->load($criteria, null, null, array(), null, 1, $orderBy);
    }
}
