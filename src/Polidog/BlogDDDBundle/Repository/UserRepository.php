<?php

namespace Polidog\BlogDDDBundle\Repository;
use Doctrine\ORM\EntityRepository;
use Polidog\Blog\Model\Post\Author;
use Polidog\Blog\Model\Post\AuthorRepository;
use Polidog\BlogDDDBundle\DomainEntityConverter\UserConverter;
use Polidog\BlogDDDBundle\Entity\User;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository implements AuthorRepository, \Polidog\Blog\Model\Account\UserRepository
{
    /**
     * @param int $id
     * @return Author|null
     */
    public function get(int $id)
    {
        /** @var User $user */
        $user = $this->find($id);
        if ($user instanceof User) {
            return (new UserConverter())->toAuthor($user);
        }
    }

    public function findEmail(string $email)
    {
        /** @var User $user */
        $user = $this->findOneBy(['email' => $email]);
        if ($user instanceof User) {
            return (new UserConverter())->toUser($user);
        }
    }


    public function create(\Polidog\Blog\Model\Account\User $user):void
    {
        $entity = (new UserConverter())->formUser($user);
        $this->getEntityManager()->persist($entity);
        $this->getEntityManager()->flush();
    }


}
